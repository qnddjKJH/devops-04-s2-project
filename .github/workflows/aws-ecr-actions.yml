name: Deploy Docker Image to Amazone ECR & ECS Automatic Deployment

# Release 또는 tag(x.x 형식의 tag) 가 push 되는 경우
# Docker Image Build 및 AWS ECR push
on:
  release:
    types: [published]
  push:
    tags:
      - '[0-9].[0-9]'

env:
  AWS_REGION: ap-northeast-2                    # set this to your preferred AWS region, e.g. us-west-1
  ECS_CLUSTER: aws-dp-server-cluster            # set this to your Amazon ECS cluster name
  ECS_SERVICE: awsdp-server-svc                 # set this to your Amazon ECS service name
  ECS_TASK_DEFINITION: awsdp-server-definitions   # set this to the path to your Amazon ECS task definition
                                                # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: awsdp-server-container        # set this to the name of the container in the
                                                # containerDefinitions section of your task definition
      
jobs:
  push_to_registry:
    name: Push Docker image to Amazone ECR
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          # role-to-assume: arn:aws:iam::672550356892:user/ec-user
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
        
      - name: Get Release Tag Name
        id: release_tag
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: aws-dp-server
          IMAGE_TAG: ${{ steps.release_tag.outputs.tag }}
        working-directory: ./server
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} --query taskDefinition > task-definition.json
      
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
